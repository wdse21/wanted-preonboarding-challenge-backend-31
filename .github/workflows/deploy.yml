name: deploy

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  lint:
    name: lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: ['18.x', '20.x', '22.x']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Run lint
        run: npm run lint

  test:
    name: test
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: ['18.x', '20.x', '22.x']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test

  build:
    name: build
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: ['18.x', '20.x', '22.x']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      # 캐쉬화 필요
      # - name: Cache dependencies
      #   id: cache
      #   uses: actions/cache@v3
      #   with:
      #     path: backend/server/node_modules
      #     key: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('backend/server/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('backend/server/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run build
        run: npm run build --if-present

  deploy:
    name: deploy
    needs: ['lint', 'test', 'build']
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to prod
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_SSH_KEY }}
          port: ${{ secrets.AWS_PORT }}
          script: |
            whoami

            mkdir /home/ubuntu/test
            cd /home/ubuntu/test
            git clone https://github.com/wdse21/wanted-preonboarding-challenge-backend-31.git .
            git pull origin main
